<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://dunlopwill.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dunlopwill.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-25T08:21:57+00:00</updated><id>https://dunlopwill.github.io/feed.xml</id><title type="html">blank</title><subtitle>A personal website for Will Dunlop MSc ACA. </subtitle><entry><title type="html">developer accountants</title><link href="https://dunlopwill.github.io/blog/2025/developer-accountants/" rel="alternate" type="text/html" title="developer accountants"/><published>2025-08-19T19:57:33+00:00</published><updated>2025-08-19T19:57:33+00:00</updated><id>https://dunlopwill.github.io/blog/2025/developer-accountants</id><content type="html" xml:base="https://dunlopwill.github.io/blog/2025/developer-accountants/"><![CDATA[<h2 id="contents">Contents</h2> <ul> <li><a href="#accountants-are-de-facto-developers">Accountants are <em>de facto</em> developers</a></li> <li><a href="#excel-is-programming">Excel is programming</a></li> <li><a href="#formulas-are-functions">Formulas are functions</a></li> <li><a href="#problem-solving">Problem solving</a></li> <li><a href="#summary">Summary</a></li> <li><a href="#bonus:-getting-started-with-python-in-excel">BONUS: Getting started with Python in Excel</a></li> </ul> <h2 id="accountants-are-de-facto-developers">Accountants are <em>de facto</em> developers</h2> <p>I first heard of <a href="https://silverfin.com/resources/developer-accountant-intro/">Developer Accountants</a> from <a href="https://silverfin.com/">Silverfin</a>.</p> <p>And it got me thinking… <em>most</em> accountants are <em>de facto</em> developers.</p> <p>The <em>de jure</em> job title might suggest otherwise but when the daily activities of accountants are observed, a different picture emerges.</p> <h2 id="excel-is-programming">Excel is programming</h2> <p>”<a href="https://www.microsoft.com/en-us/research/podcast/advancing-excel-as-a-programming-language-with-andy-gordon-and-simon-peyton-jones/"><em>…Excel is the world’s most widely used functional programming language.</em></a>” - <a href="https://simon.peytonjones.org/">Simon Peyton Jones</a></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://youtube.com/shorts/YPSGL2MsES4?feature=shared" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div> <p>”<a href="https://youtube.com/shorts/YPSGL2MsES4?feature=shared"><em>…This pisses a lot of developers off because it turns out that people in the accounts department have been doing FP [Functional Programming] for longer than they have.</em></a>” - <a href="https://x.com/kevlinhenney?lang=en">Kevlin Henney</a></p> <p>That’s right. Spreadsheets rule the profession. In industry and practice, accountants use Excel every day. Whether they know it or not, every time they type an Excel formula they are programming.</p> <h2 id="formulas-are-functions">Formulas are functions</h2> <p>A function is piece of code that takes something as an input, does something and returns an output.</p> <p>Let’s take a closer look at the first function most accountants learn: <a href="https://support.microsoft.com/en-gb/office/sum-function-043e1c7d-7726-4e80-8f32-07b23e057f89">SUM</a></p> <p>When you type <code class="language-plaintext highlighter-rouge">=SUM(</code> into Excel it will display the interface for you:</p> <pre><code class="language-excel">SUM(number1, [number2], ...)
</code></pre> <p>SUM is a function that takes one or more numbers and returns the result of adding them all together.</p> <p>Let me show you what <a href="https://docs.python.org/3/library/functions.html#sum">sum</a> looks like in <a href="https://www.python.org/">Python</a> (one of the world’s most popular programming languages):</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">sum</span><span class="p">(</span><span class="n">iterable</span><span class="p">,</span> <span class="o">/</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># Sums start and the items of an iterable from left to right and returns the total.
#The iterable’s items are normally numbers...
</span></code></pre></div></div> <p>Doesn’t look too different, does it?</p> <p>But wait, what’s an iterable?</p> <p>Say you have the following data in Excel:</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">10</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">20</td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">30</td> </tr> <tr> <td style="text-align: center">4</td> <td style="text-align: center">40</td> </tr> </tbody> </table> <p>When you use SUM in Excel, you probably don’t type <code class="language-plaintext highlighter-rouge">=SUM(A1+A2+A3+A4)</code>. You probably use a cell range and type:</p> <pre><code class="language-excel">=SUM(A1:A4)
</code></pre> <p>The cell range is an iterable. Each element in the cell range is a reference to a cell.</p> <p>Here’s the same in Python:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nf">sum</span><span class="p">(</span><span class="n">numbers</span><span class="p">)</span>
</code></pre></div></div> <p>The only difference is that our iterable is a list of numbers (rather than a cell range).</p> <h2 id="problem-solving">Problem solving</h2> <p>Okay, so that’s a fairly simple example.</p> <p>Developers solve complex problems with their programming. But how do they do that?</p> <p>Well, how do you eat an elephant (personal aside: by the way, I’d rather you didn’t eat elephants)? Piece by piece.</p> <p>Developers break a single complex problem down into multiple simple problems, solving each one and stitching it all together.</p> <p>Accountants often do the same in Excel.</p> <p>Say you have the following data…</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> <th style="text-align: center">B</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">Email</td> <td style="text-align: center">Name</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">bob@example.com</td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">bill@example.com</td> <td style="text-align: center"> </td> </tr> </tbody> </table> <p>…and you want to get the bit before the email domain (the name) for each cell. You could <em>nest</em> some formulas together…</p> <pre><code class="language-excel">=LEFT(A2,FIND("@",A2)-1)
</code></pre> <p>…and then apply that to each cell (by dragging the formula down)…</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> <th style="text-align: center">B</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">Email</td> <td style="text-align: center">Name</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">bob@example.com</td> <td style="text-align: center">=LEFT(A2,FIND(“@”,A2)-1)</td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">bill@example.com</td> <td style="text-align: center">=LEFT(A3,FIND(“@”,A3)-1)</td> </tr> </tbody> </table> <p>…giving you:</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> <th style="text-align: center">B</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">Email</td> <td style="text-align: center">Name</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">bob@example.com</td> <td style="text-align: center">bob</td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">bill@example.com</td> <td style="text-align: center">bill</td> </tr> </tbody> </table> <p>What have we done to solve this more complex problem? We broke it down into the following steps:</p> <ol> <li><code class="language-plaintext highlighter-rouge">FIND("@",A2)</code>: Take the text in the cell reference (<code class="language-plaintext highlighter-rouge">A2</code>) and find the position of the <em>delimiter</em> (<code class="language-plaintext highlighter-rouge">"@"</code>) in that text. “@” is the fourth character in “bob@example.com”</li> <li>Take the text in the cell reference (<code class="language-plaintext highlighter-rouge">A2</code>) and return the <em>n</em> characters (where n is the position of the delimiter less one, so that the delimiter is not included in the result). Note: <code class="language-plaintext highlighter-rouge">=LEFT(A2,FIND("@",A2)-1)</code> evaluates to <code class="language-plaintext highlighter-rouge">=LEFT(A2,4-1)</code></li> <li>Do this <em>for each</em> cell.</li> </ol> <p>How would a developer do the same in Python?</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">emails</span> <span class="o">=</span> <span class="p">[</span>
      <span class="sh">"</span><span class="s">bob@example.com</span><span class="sh">"</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">bill@example.com</span><span class="sh">"</span><span class="p">,</span>
    <span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">names</span> <span class="o">=</span> <span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">email</span> <span class="ow">in</span> <span class="n">emails</span><span class="p">:</span>
      <span class="n">names</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">email</span><span class="p">[:</span><span class="n">email</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="sh">"</span><span class="s">@</span><span class="sh">"</span><span class="p">)])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">names</span>
<span class="p">[</span><span class="sh">'</span><span class="s">bob</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">bill</span><span class="sh">'</span><span class="p">]</span>
</code></pre></div></div> <p>Here the code preforms the following steps for each email in emails:</p> <ol> <li>Find the position of the <em>delimiter</em> “@”: <code class="language-plaintext highlighter-rouge">email.find("a")</code></li> <li>Take all the characters of email up to the delimiter’s position: <code class="language-plaintext highlighter-rouge">email[:email.find("@")]</code> (for “bob@example.com” this evaluates to <code class="language-plaintext highlighter-rouge">email[:3]</code>, note that Python starts counting from 0; whereas Excel starts counting from 1)</li> <li>Append these to the names list: <code class="language-plaintext highlighter-rouge">names.append(email[:email.find("@")])</code> (for “bob@example.com” this evaluates to <code class="language-plaintext highlighter-rouge">names.append("bob")</code>)</li> </ol> <h2 id="summary">Summary</h2> <p>Developers are people that use programming languages to solve problems.</p> <p>A programming language is a digital tool that lets you write functions to solve a problem.</p> <p>Excel is a digital tool that lets you write functions to solve a problem.</p> <p>Therefore Excel is a programming language.</p> <p>Accountants use Excel to solve problems.</p> <p>Therefore accountants are developers.</p> <h2 id="bonus-getting-started-with-python-in-excel">BONUS: Getting started with Python in Excel</h2> <p>Perhaps you are an accountant and, recognizing that you are also a developer, you want to expand the programming languages that you already know.</p> <p><a href="https://www.python.org/about/gettingstarted/">Python</a> can be fairly quick to pick up and if you might already have it available to you in Excel.</p> <p>If you have “Insert Python” listed when you click “Formulas” in the Excel ribbon, you have Python in Excel (luck you!).</p> <p>Read the <a href="https://support.microsoft.com/en-gb/office/get-started-with-python-in-excel-a33fbcbe-065b-41d3-82cf-23d05397f53d">docs</a> and get practicing.</p> <p>Let’s do the above Python implementation again using Excel as our developer environment.</p> <p>Say you have the following data…</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> <th style="text-align: center">B</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">Email</td> <td style="text-align: center">Name</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">bob@example.com</td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">bill@example.com</td> <td style="text-align: center"> </td> </tr> </tbody> </table> <p>Start a Python function in cell <code class="language-plaintext highlighter-rouge">B2</code> by entering <code class="language-plaintext highlighter-rouge">=PY(</code>.</p> <p>Now enter the following:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">email</span> <span class="o">=</span> <span class="nf">xl</span><span class="p">(</span><span class="sh">"</span><span class="s">A2</span><span class="sh">"</span><span class="p">)</span>  <span class="c1"># Get the text from the cell reference
</span><span class="n">name</span> <span class="o">=</span> <span class="n">email</span><span class="p">[:</span><span class="n">email</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="sh">"</span><span class="s">@</span><span class="sh">"</span><span class="p">)]</span>  <span class="c1"># Get the name
</span></code></pre></div></div> <p>Drag the cell formula down.</p> <p>You’ll end up with:</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">A</th> <th style="text-align: center">B</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">Email</td> <td style="text-align: center">Name</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">bob@example.com</td> <td style="text-align: center">[PY] bob</td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">bill@example.com</td> <td style="text-align: center">[PY] bill</td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="tech"/><category term="developer"/><category term="accountants"/><category term="excel"/><category term="python"/><category term="programming"/><summary type="html"><![CDATA[Contents]]></summary></entry><entry><title type="html">starting a blog with jekyll</title><link href="https://dunlopwill.github.io/blog/2025/starting-a-blog-with-jekyll/" rel="alternate" type="text/html" title="starting a blog with jekyll"/><published>2025-08-05T22:08:00+00:00</published><updated>2025-08-05T22:08:00+00:00</updated><id>https://dunlopwill.github.io/blog/2025/starting-a-blog-with-jekyll</id><content type="html" xml:base="https://dunlopwill.github.io/blog/2025/starting-a-blog-with-jekyll/"><![CDATA[<p>Welcome to my first blog post!</p> <p>I thought that I would use my first blog post to document and justify:</p> <ul> <li><a href="#why">why</a> I’ve started a blog;</li> <li><a href="#who">who</a> its for;</li> <li><a href="#what">what</a> its built with;</li> <li><a href="#where">where</a> its hosted;</li> <li><a href="#how">how</a> you can build one too;</li> </ul> <h2 id="why">Why?</h2> <p>“<em>Why start a blog?</em>”</p> <p>Essentially, so I can:</p> <ul> <li><a href="#contribute">Contribute</a></li> <li><a href="#practice">Practice</a></li> <li><a href="#create">Create</a></li> <li><a href="#develop">Develop</a></li> <li><a href="#share">Share</a></li> </ul> <h3 id="contribute">Contribute</h3> <p>A colleague of mine sent me a link <a href="https://grantslatton.com/how-to-design-document?utm_source=tldrnewsletter">Grant Slatton’s ‘How to write a good design document’</a> and I thought it was really good.</p> <p>So, then I explored his posts and found <a href="https://grantslatton.com/small-web">‘Small Web’</a>; a post noting that the internet needs more “<strong>small web</strong>” sites.</p> <p>I’d like to contribute a small web site. The internet is filling up with posts written by Generative AI. Maybe I can provide something original?</p> <h3 id="practice">Practice</h3> <p>Its rare I get to write a lot of prose these days. I’m out of practice. So, it wouldn’t surprise me if my writing skills had deteriorated.</p> <p>What better way to get back than give my self somewhere to practice writing? Maybe I’ll get better than I’ve ever been. Perhaps I’ll even expand my vocabulary.</p> <h3 id="create">Create</h3> <p>I think this could be a creative outlet. A space to make something, even if just for myself. If just once someone happens to read any of my posts and find some joy from them that would be a bonus.</p> <h3 id="develop">Develop</h3> <p>For the last few years I’ve been working as a developer. My developer ego feels unsatisfied that I don’t have my own website.</p> <p>Moreover, this is an opportunity to learn another set of technologies that make this web site work.</p> <h3 id="share">Share</h3> <p>Like everyone, I’ve learnt some things. Maybe sharing what I’ve learned could help someone else one day.</p> <h2 id="who">Who?</h2> <p>“<em>Who is this blog for?</em>”</p> <p>Everyone.</p> <p>When I’m writing it, its for me.</p> <p>When you’re reading it, its for you.</p> <h2 id="what">What?</h2> <p>“<em>What did I use to build this blog?</em>”</p> <p>This blog is built using <a href="https://jekyllrb.com/">Jekyll</a>, a <a href="https://jekyllrb.com/docs/ruby-101/#gems">Ruby Gem</a>.</p> <p>Something based on <a href="https://www.ruby-lang.org/en/">Ruby</a> would not have been my first choice because I’ve no former experience with it.</p> <p>Microsoft Copilot suggested it when I asked what web framework I could use to develop my own blog with.</p> <p>My primary reasons for trying it out are twofold.</p> <p>Firstly, the majority of content can be written in <a href="https://www.markdownguide.org/">Markdown</a>. Meaning that, what I write is very transportable. For example, I can simply copy and paste content to and from my favorite note taking application; <a href="https://obsidian.md/">Obsidian</a>.</p> <p>Secondly, it easily integrates with <a href="https://pages.github.com/">GitHub Pages</a>. Meaning that, deployment is a breeze.</p> <p>A bonus too is that I get some exposure to other programming languages and expand my skill set.</p> <p>The icing on the cake? Pre-built themes. I can focus on the content and the framework will make it look presentable for me.</p> <h2 id="where">Where?</h2> <p>“<em>Where is this blog hosted?</em>”</p> <p>As I said before, <a href="https://pages.github.com/">GitHub Pages</a>.</p> <p>This blog is maintained via a <a href="https://github.com/">GitHub</a> repository. How cool is that? I benefit from all of <a href="https://git-scm.com/">git</a>’s version control capabilities!</p> <p>It’s deployed using <a href="https://github.com/features/actions">GitHub Actions</a>.</p> <h2 id="how">How?</h2> <p>“<em>How can you build a blog using Jekyll?</em>”</p> <p>Would you like to know how to build a blog like this yourself?</p> <p>I’ll tell you anyway.</p> <h3 id="create-a-github-repository">Create a GitHub repository</h3> <p>Assuming you have an account, create a <a href="https://github.com/">GitHub</a> repository and name it “<em>username</em>.github.io” (<strong>remember to replace “<em>username</em>” with your actual username</strong> - that’s worth keeping in mind in the following steps to).</p> <p>Make sure you set visibility to “Public”.</p> <p>I suggest adding a README.md for your own benefit (so set it to “On”, rather than “Off”).</p> <p>Save yourself from problems later by adding a .gitignore and select “Jekyll”.</p> <h3 id="clone-your-repository">Clone your repository</h3> <p>Clone your repository.</p> <h3 id="install-requirements">Install requirements</h3> <p>Essentially, you are going to need:</p> <ul> <li>ruby</li> <li>gem</li> <li>bundler</li> <li>jekyll</li> </ul> <p>You can figure out how to install these pre-requisites. I believe in you.</p> <h4 id="i-use-nixos-btw">I use <a href="https://nixos.org/">NixOS</a> btw</h4> <p>I will show you what I did to install what I needed on <a href="https://nixos.org/">NixOS</a>.</p> <p>I’m still fairly new to this OS, so forgive me, I know this is not the nix-way:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nix-shell <span class="nt">-p</span> ruby gem bundler
gem <span class="nb">install </span>jekyll bundler
</code></pre></div></div> <h3 id="create-a-new-blog">Create a new blog</h3> <p>Run:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>username.github.io
jekyll new myblog
<span class="nb">cp </span>myblog/<span class="k">*</span> ./ <span class="nt">-r</span>  <span class="c"># cp the files over</span>
<span class="nb">rm </span>myblog/ <span class="nt">-r</span>  <span class="c"># rm the old directory</span>
bundle <span class="nb">install</span>  <span class="c"># install missing gems</span>
</code></pre></div></div> <p>Ready to see what your new blog looks like? Run:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div> <p>Then go to: <a href="http://localhost:4000">http://localhost:4000</a></p> <p>To stop serving, use <code class="language-plaintext highlighter-rouge">Ctrl</code>+<code class="language-plaintext highlighter-rouge">c</code>.</p> <p>You’ll get the <a href="https://github.com/jekyll/minima?tab=readme-ov-file">Minima</a> theme by default.</p> <h3 id="commit-the-files">Commit the files</h3> <p>Run:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s2">"my first commit"</span>
git push origin main
</code></pre></div></div> <h3 id="add-the-workflow">Add the workflow</h3> <p>Go to your <a href="https://github.com">GitHub</a> repository.</p> <p>Click “Settings” (at the top)</p> <p>Click “Pages” (under “Code and automation”)</p> <p>Click “GitHub Actions” (under “Source”, which is under “Build and deployment”)</p> <p>Click “Actions (at the top)</p> <p>Set up a workflow using “Jekyll” (that’s <em>exactly</em> what its called).</p> <p>You should get a file called <code class="language-plaintext highlighter-rouge">.github/workflows/jekyll.yml</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># This workflow uses actions that are not certified by GitHub.</span>
<span class="c1"># They are provided by a third-party and are governed by</span>
<span class="c1"># separate terms of service, privacy policy, and support</span>
<span class="c1"># documentation.</span>

<span class="c1"># Sample workflow for building and deploying a Jekyll site to GitHub Pages</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Deploy Jekyll site to Pages</span>

<span class="na">on</span><span class="pi">:</span>
  <span class="c1"># Runs on pushes targeting the default branch</span>
  <span class="na">push</span><span class="pi">:</span>
    <span class="na">branches</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">main"</span><span class="pi">]</span>

  <span class="c1"># Allows you to run this workflow manually from the Actions tab</span>
  <span class="na">workflow_dispatch</span><span class="pi">:</span>

<span class="c1"># Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages</span>
<span class="na">permissions</span><span class="pi">:</span>
  <span class="na">contents</span><span class="pi">:</span> <span class="s">read</span>
  <span class="na">pages</span><span class="pi">:</span> <span class="s">write</span>
  <span class="na">id-token</span><span class="pi">:</span> <span class="s">write</span>

<span class="c1"># Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.</span>
<span class="c1"># However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.</span>
<span class="na">concurrency</span><span class="pi">:</span>
  <span class="na">group</span><span class="pi">:</span> <span class="s2">"</span><span class="s">pages"</span>
  <span class="na">cancel-in-progress</span><span class="pi">:</span> <span class="kc">false</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="c1"># Build job</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v4</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Setup Ruby</span>
        <span class="c1"># https://github.com/ruby/setup-ruby/releases/tag/v1.207.0</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">ruby-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.1'</span> <span class="c1"># Not needed with a .ruby-version file</span>
          <span class="na">bundler-cache</span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># runs 'bundle install' and caches installed gems automatically</span>
          <span class="na">cache-version</span><span class="pi">:</span> <span class="m">0</span> <span class="c1"># Increment this number if you need to re-download cached gems</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Setup Pages</span>
        <span class="na">id</span><span class="pi">:</span> <span class="s">pages</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/configure-pages@v5</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build with Jekyll</span>
        <span class="c1"># Outputs to the './_site' directory by default</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">bundle exec jekyll build --baseurl "$"</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">JEKYLL_ENV</span><span class="pi">:</span> <span class="s">production</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Upload artifact</span>
        <span class="c1"># Automatically uploads an artifact from the './_site' directory by default</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/upload-pages-artifact@v3</span>

  <span class="c1"># Deployment job</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">github-pages</span>
      <span class="na">url</span><span class="pi">:</span> <span class="s">$</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">needs</span><span class="pi">:</span> <span class="s">build</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to GitHub Pages</span>
        <span class="na">id</span><span class="pi">:</span> <span class="s">deployment</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/deploy-pages@v4</span>
</code></pre></div></div> <h3 id="deploy">Deploy</h3> <p>Click on “Actions” (at the top)</p> <p>Did you get a green circle/tick? That means success: Go to <a href="https://username.github.io/">https://username.github.io/</a> to see your site in action!</p> <p>Did you get a red circle/tick? That means deployment failed. Don’t worry, it happened to me too. Read the error(s) and adjust accordingly.</p> <p>On the first run, I got the following error message:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
 ERROR:  Error installing bundler:
   bundler-2.7.1 requires Ruby version <span class="o">&gt;=</span> 3.2.0. The current ruby version is 3.1.6.
...
</code></pre></div></div> <p>and had to make the following adjustment to the workflow file:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
<span class="err">
</span>        with:
<span class="gd">-          ruby-version: '3.1' # Not needed with a .ruby-version file
</span><span class="gi">+          ruby-version: '3.2' # Not needed with a .ruby-version file
</span>...
</code></pre></div></div> <h3 id="update">Update</h3> <p>Every time you make a commit on the main branch, the action will run the workflow again deploying the site.</p> <p>So, you can just focus on adding posts to the <code class="language-plaintext highlighter-rouge">_posts</code> directory with markdown files using the following file naming convention <code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY.title.MARKUP</code> (e.g, <code class="language-plaintext highlighter-rouge">2025-08-05-my-post.md</code>).</p> <p>Edit the <code class="language-plaintext highlighter-rouge">_config.yml</code> file with the information you want to see.</p> <h2 id="thank-you">Thank you</h2> <p>Thanks for reading!</p>]]></content><author><name></name></author><category term="jekyll"/><category term="markdown"/><category term="blog"/><category term="tech"/><summary type="html"><![CDATA[Welcome to my first blog post!]]></summary></entry><entry><title type="html">Reflections from our Scale-up Business Intern Will Dunlop - Engine Shed</title><link href="https://dunlopwill.github.io/blog/2018/reflections-from-our-scale-up-business-intern-will-dunlop-engine-shed/" rel="alternate" type="text/html" title="Reflections from our Scale-up Business Intern Will Dunlop - Engine Shed"/><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><id>https://dunlopwill.github.io/blog/2018/reflections-from-our-scale-up-business-intern-will-dunlop---engine-shed</id><content type="html" xml:base="https://dunlopwill.github.io/blog/2018/reflections-from-our-scale-up-business-intern-will-dunlop-engine-shed/"><![CDATA[<p>Get directionsEngine Shed, Station Approach, Temple Meads, Bristol, BS1 6QH Author: Tamsin Denbigh Published: 9th March 2018 My name is Will Dunlop and I am a post-graduate University of Bristol student, soon to complete my MSc in Economics, Finance and Management. I began my Scale Up Business Internship in December, 2017.  I have been really lucky to have had the opportunity to be involved in the Scale-up Ecosystem Project run by the Engine Shed, under the supervision of the Scale-up Enabler Briony Phillips.Will Dunlop, Scale-up InternThe purpose of the internship has been to investigate data about the assets (programmes, services, initiatives, organisations) that exist to support scale-up businesses, and then to investigate the scale-up businesses themselves, and the deal-flow in the West of England.Over the last three months, I have been responsible for data -collection, -preparation, -verification and -visualisation. I’ve also had several opportunities to expand my role and responsibilities, including shadowing meetings, to techier things such as entering JSON files for publication in an online system (the Scale-up Ecosystem Map), and now a chance to write for their online blog too!We have made significant progress, having identified over 700 scale-ups in the South West, as well as over 400 assets available to support these businesses. These assets have been categorised to support scale-ups with regards to Finance, Markets, Skills and Talent, Leadership and Infrastructure. I have also produced a number of visual displays to help both Start-ups and Scale-ups learn about the support that is available to them.I’ve really enjoyed my time here at the Engine Shed. Briony, as well as the rest of the Engine Shed and SETsquared teams, have been truly supportive throughout; offering advice, sharing their experiences and learning outcomes, as well as much more. In addition, I genuinely appreciate how my thoughts and input have been listened to and valued throughout my time here; helping to shape the way we have engaged with the scale-up data.Since starting the internship, my knowledge of the business ecosystem in the South West has vastly improved. I’ve developed a good understanding of the challenges faced by businesses that are scaling up (and how to combat them); researching and hearing first-hand information from some of the owners and directors themselves. Furthermore, I’ve learnt of the huge range of opportunities available to scale-ups in the South West (many are also relevant to start-ups and SMEs).I must admit that I have left the Scale-up Ecosystem map with some potential improvements to be made. The assets available to Scale-ups could be sub-categorized beyond our initial five filters (Finance, Infrastructure, Skills &amp; Talent, Markets, and Leadership) to be more industry specific. So that tech scale ups can easily find tech specific skills and talent support, for instance.The data itself could be analysed further to gain an understanding of specific information regarding the demographics and trends of the assets available in the South West. It might also be interesting to incorporate additional assets that are available to start-ups and SMEs into the Ecosystem Map, which have not been covered by investigating scale-ups. Perhaps, however, that would be another project entirely.This internship has been one of my most valuable working and learning experiences to date. With the end of my studies in sight, the Scale-up Business Internship has given me an awesome platform to launch my career from. For these reasons and beyond I absolutely adore the Engine Shed and will be forever grateful for the wonderful opportunity Briony and the rest of the team bestowed upon me. They are doing excellent work, which has great importance to the region as a whole. Moreover they have an incredibly talented team to achieve their projects with.William Dunlop, Scale-up Business Intern, University of BristolWill’s work is already available in the Scale-up Ecosystem Map and will be central to our next development – a map of scale-up businesses.This blog series tells the story of the Scale-up Enabler, Briony Phillips. Briony joined the Engine Shed team on a 1 year contract in June 2017 funded by Business West, Engine Shed, The University of Bristol and the West of England Growth Hub. This group have a shared ambition – first, to identify scale-up businesses in the West of England region and to better understand their challenges and second, to design, facilitate and support initiatives that will make it easier for businesses to scale-up more effectively – in the long term.Links and information are correct as of February 2018.Briony – Scale-up Enabler briony.phillips@engine-shed.co.uk @BrionyPhi1 Tags: Business Intern, scale up, Geovation and Engine Shed are partnering to host a lunchtime learn event on Tuesday 10 June on ‘Delivering value with location data’….Engine Shed is thrilled to officially welcome our new resident AND Digital to our community! AND Digital is a digital consultancy which…Get directionsEngine Shed, Station Approach, Temple Meads, Bristol, BS1 6QHWebsite built by Storm Privacy Policy and cookies, Terms and Conditions, Modern Slavery Statement, Code of Conduct</p>]]></content><author><name></name></author><summary type="html"><![CDATA[My name is Will Dunlop and I am a post-graduate University of Bristol student, soon to complete my MSc in Economics, Finance and Management. I began my Scale Up Business Internship in December, 2017.  I have been really lucky to have had the opportunity to be involved in the Scale-up Ecosystem Project run by the […]]]></summary></entry></feed>